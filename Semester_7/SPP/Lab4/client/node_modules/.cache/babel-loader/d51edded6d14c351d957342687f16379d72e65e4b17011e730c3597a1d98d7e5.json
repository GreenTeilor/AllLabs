{"ast":null,"code":"var _jsxFileName = \"D:\\\\Labs\\\\semester_7\\\\SPP\\\\Lab4\\\\client\\\\src\\\\components\\\\AddTypeForm\\\\AddTypeForm.js\";\nimport './AddTypeForm.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport { authRequest } from \"../../utils/authRequest\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddTypeForm({\n  fetchTypes,\n  showError,\n  setActive,\n  socket\n}) {\n  const handleAddType = async e => {\n    e.preventDefault();\n    const data = {\n      name: e.target.name.value\n    };\n    try {\n      const response = await authRequest(setActive, '/types', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        console.log('Type added successfully');\n        const data = await response.json();\n        socket.emit('typeAddedEvent', `<h2 style=\"font-size: 20px; text-align: center\">New type available!</h2> <div>${data.name}</div>`);\n        await fetchTypes();\n      } else {\n        showError();\n        console.error('Failed to add type');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Add type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddType,\n      className: \"addTypeForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          form: \"typeName\",\n          className: \"form-label\",\n          children: \"Type name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Type name\",\n          className: \"form-control mr-2\",\n          id: \"typeName\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success mb-2\",\n          children: \"Add type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = AddTypeForm;\nexport default AddTypeForm;\nvar _c;\n$RefreshReg$(_c, \"AddTypeForm\");","map":{"version":3,"names":["authRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTypeForm","fetchTypes","showError","setActive","socket","handleAddType","e","preventDefault","data","name","target","value","response","method","headers","body","JSON","stringify","ok","console","log","json","emit","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","type","placeholder","id","required","_c","$RefreshReg$"],"sources":["D:/Labs/semester_7/SPP/Lab4/client/src/components/AddTypeForm/AddTypeForm.js"],"sourcesContent":["import './AddTypeForm.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport {authRequest} from \"../../utils/authRequest\";\r\n\r\nfunction AddTypeForm({fetchTypes, showError, setActive, socket}) {\r\n\r\n    const handleAddType = async (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: e.target.name.value\r\n        }\r\n        try {\r\n            const response = await authRequest(setActive,'/types', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Type added successfully');\r\n                const data = await response.json();\r\n                socket.emit('typeAddedEvent',\r\n                        `<h2 style=\"font-size: 20px; text-align: center\">New type available!</h2> <div>${data.name}</div>`);\r\n                await fetchTypes();\r\n            } else {\r\n                showError();\r\n                console.error('Failed to add type');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"mb-4\">Add type</h2>\r\n            <form onSubmit={handleAddType} className=\"addTypeForm\">\r\n                <div className=\"mb-3\">\r\n                    <label form=\"typeName\" className=\"form-label\">Type name</label>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Type name\" className=\"form-control mr-2\"\r\n                           id=\"typeName\"\r\n                           required></input>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <button type=\"submit\" className=\"btn btn-success mb-2\">Add type</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTypeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}