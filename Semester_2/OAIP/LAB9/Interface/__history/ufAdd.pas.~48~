unit ufAdd;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, unTypes;

type
  TFormAdd = class(TForm)
    btClose: TButton;
    cbGroup: TComboBox;
    cbBrand: TComboBox;
    cbCondition: TComboBox;
    dtpReceiveDate: TDateTimePicker;
    lbReceiveDate: TLabel;
    lbReturnDate: TLabel;
    dtpReturnDate: TDateTimePicker;
    btAdd: TButton;
    lbWarningGroup: TLabel;
    lbWarningBrand: TLabel;
    lbWarningCondition: TLabel;
    procedure btAddClick(Sender: TObject);
    procedure btCloseClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormAdd: TFormAdd;

implementation
uses ufMain, unListFunc;
{$R *.dfm}

//Get group of appliance by index
function GetGroup(group: integer): TGroup;
begin
  GetGroup := TGroup(group);
end;

//Get brand of appliance by index
function GetBrand(brand: integer): TBrand;
begin
  GetBrand := TBrand(brand);
end;

//Get date of appliance by text
function GetDate(Date: string): TDate;
var
  temp: TDate;
begin
  temp.day := copy(Date, 1, pos('.', Date) - 1);
  delete(Date, 1, pos('.', Date));
  temp.month := copy(Date, 1, pos('.', Date) - 1);
  delete(Date, 1, pos('.', Date));
  temp.year := Date;
  GetDate := temp;
end;

//Get condition by index
function GetCondition(isReadyIndex: integer): boolean;
begin
  if isReadyIndex = 1 then
    GetCondition := true
  else
    GetCondition := false;
end;

//Get info about appliance
procedure GetApplianceInfo(var appliance: TAppliance);
begin
  appliance.group := GetGroup(FormAdd.cbGroup.ItemIndex);
  appliance.brand := GetBrand(FormAdd.cbBrand.ItemIndex);
  appliance.receiveDate := GetDate(FormatDateTime('dd.mm.yyyy', FormAdd.dtpReceiveDate.Date));
  appliance.returnDate := GetDate(FormatDateTime('dd.mm.yyyy', FormAdd.dtpReturnDate.Date));
  appliance.isReady := GetCondition(FormAdd.cbCondition.ItemIndex);
end;

//Add new appliance
procedure TFormAdd.btAddClick(Sender: TObject);
var
  Itm: TListItem;
  appliance: TAppliance;
begin
  lbWarningGroup.visible := false;
  lbWarningBrand.visible := false;
  lbWarningCondition.visible := false;
  if (cbGroup.ItemIndex <> -1) and (cbBrand.ItemIndex <> -1) and (cbCondition.ItemIndex <> -1) then
  begin
    GetApplianceInfo(appliance);
    AddListElem(head, tail, appliance);
    PrintList(head, tail, FormMain.lvList);
  end
  else
  begin
    if cbGroup.ItemIndex = -1 then
      lbWarningGroup.visible := true;
    if cbBrand.ItemIndex = -1 then
      lbWarningBrand.visible := true;
    if cbCondition.ItemIndex = -1 then
      lbWarningCondition.visible := true;
  end;
end;

//Close form
procedure TFormAdd.btCloseClick(Sender: TObject);
begin
  FormAdd.Close;
end;

end.
